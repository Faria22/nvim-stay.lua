*nvim-stay.txt*        For Neovim


		NVIM-STAY.LUA REFERENCE


Never lose your place in a buffer again	    	*nvim-stay*

1. Introduction				|nvim-stay-introduction|
2. Installation				|nvim-stay-installation|
3. Configuration			|nvim-stay-configuration|
4. Commands				|nvim-stay-commands|
5. Variables				|nvim-stay-variables|
6. Integration				|nvim-stay-integration|
7. Troubleshooting			|nvim-stay-troubleshooting|
8. Credits and license			|nvim-stay-credits-license|

==============================================================================
1. Introduction					*nvim-stay-introduction*

nvim-stay.lua is a Lua implementation of the vim-stay plugin, adding 
automated |View| creation and restoration whenever editing a buffer, across 
Neovim sessions and window life cycles. It also alleviates Neovim's tendency 
to lose view state when cycling through buffers (via |argdo|, |bufdo| et al.). 

It is smart about which buffers should be persisted and which should not, 
making the procedure painless and invisible.

This plugin is designed to work with Neovim.

==============================================================================
2. Installation					*nvim-stay-installation*

Using a plugin manager (e.g., vim-plug, packer.nvim, lazy.nvim):

For vim-plug: >
    Plug 'Faria22/nvim-stay.lua'
<

For packer.nvim: >
    use 'Faria22/nvim-stay.lua'
<

For lazy.nvim: >
    { 'Faria22/nvim-stay.lua' }
<

Manual installation:
1. Clone the repository into your 'packpath':
   >
   git clone https://github.com/Faria22/nvim-stay.lua \
     ~/.local/share/nvim/site/pack/plugins/start/nvim-stay.lua
<
2. Run `:helptags ALL` to generate help tags

==============================================================================
3. Configuration				*nvim-stay-configuration*


VIEW SESSION CONFIGURATION:			*nvim-stay-viewoptions*

The following, non-standard 'viewoptions' settings are recommended:
>
	set viewoptions=cursor,folds,slash,unix
<
It is recommended to clear the 'viewdir' contents after changing this option,
as it is only applied when creating a view session file, not when loading it.
nvim-stay.lua provides the |:CleanViewdir| command to do that.

Note that you absolutely should remove `options` from 'viewoptions':
>
	set viewoptions-=options
<
as storing local options in view session files causes no end of trouble.


IGNORED FILE TYPES:				*g:volatile_ftypes*

nvim-stay.lua applies heuristics to detect buffers that should not be 
persisted, but in some cases non-persistent buffers slip through. You can 
mark file types as volatile by adding them to the `volatile_ftypes` list:
>
	vim.g.volatile_ftypes = {
	  'gitcommit', 'gitrebase', 'gitsendmail',
	  'hgcommit', 'svn', 'cvs', 'bzr',
	}
<
You can also append to the defaults:
>
	local defaults = vim.g.volatile_ftypes
	table.insert(defaults, 'myfiletype')
	vim.g.volatile_ftypes = defaults
<

DISABLED VIEWOPTIONS:			*g:stay_disabled_viewoptions*

To stop persisting specific view attributes, list their tokens from
|'viewoptions'| in `g:stay_disabled_viewoptions`. This is useful when folds or
cursor positions should remain ephemeral:
>
	vim.g.stay_disabled_viewoptions = {'folds'}
	vim.g.stay_disabled_viewoptions = {'folds', 'cursor'}
<
Tables keyed by option name and set to `true` are also accepted.

ERROR MESSAGING VERBOSITY:			*g:stay_verbosity*

Because it is designed to work in the background of frequent Neovim operations,
nvim-stay.lua will suppress most errors and only echo messages about important 
ones. You can adjust this policy by setting:
>
	vim.g.stay_verbosity = -1  -- No messages
	vim.g.stay_verbosity = 0   -- Important errors only (default)
	vim.g.stay_verbosity = 1   -- All errors
<

==============================================================================
4. Commands					*nvim-stay-commands*


:CleanViewdir[!] [days]				*:CleanViewdir*
		Remove all saved view sessions in 'viewdir', optionally
		keeping view sessions files not older than {days} days.

		Note: this will ask for confirmation before deleting files.
		Use the bang variant to bypass the confirmation prompt.

		Examples: >
		    :CleanViewdir      " Remove all view files (with prompt)
		    :CleanViewdir!     " Remove all view files (no prompt)
		    :CleanViewdir 30   " Keep files from last 30 days
<

:StayReload[!]					*:StayReload*
		Load new nvim-stay.lua integrations.

		The bang variant will re-load the plugin entirely, clearing
		and re-defining all autocommands, commands, and configuration
		variables.

==============================================================================
5. Variables					*nvim-stay-variables*


b:stay_loaded_view				*b:stay_loaded_view*
		Full path to the last view session file loaded for the current
		buffer. This value is not nvim-stay.lua specific and will only
		change when the loaded view file's path changes.

b:stay_ignore					*b:stay_ignore*
		Set to 1 to prevent nvim-stay.lua from making and restoring 
		sessions for a specific buffer: >
		    let b:stay_ignore = 1
<

b:stay_atpos					*b:stay_atpos*
		Set to make nvim-stay.lua respect a position set by another 
		script or plugin: >
		    let b:stay_atpos = {line, column}
<
		This position will be restored after loading the session.

==============================================================================
6. Integration					*nvim-stay-integration*


AUTOCOMMAND API:				*nvim-stay-autocommands*

nvim-stay.lua triggers User autocommand events when loading or saving state:

*BufStayLoadPre*	Before loading a view session
*BufStayLoadPost*	After loading a view session
*BufStaySavePre*	Before saving a view session
*BufStaySavePost*	After saving a view session

Example: >
    autocmd User BufStayLoadPost lua print("View loaded!")
<

==============================================================================
7. Troubleshooting				*nvim-stay-troubleshooting*


MY CURSOR POSITION IS NOT PERSISTED

You have removed "cursor" from 'viewoptions'. See the recommended setting
under |nvim-stay-viewoptions|.


MY FOLD STATE IS NOT PERSISTED

You have removed "folds" from 'viewoptions'. See the recommended setting
under |nvim-stay-viewoptions|.


MY BUFFER-LOCAL OPTIONS ARE NOT PERSISTED

This is by design: restoring local options from view session files causes 
hard to track issues. nvim-stay.lua will ignore the `options` flag in
'viewoptions' when creating views.


NVIM-STAY.LUA TRIES TO PERSIST STATE FOR TEMPORARY FILES

- Check if the files are listed in 'backupskip' - nvim-stay.lua will ignore 
  files in directories listed there.
- You can set |b:stay_ignore| to 1 for specific buffers.


MY VIEW DIRECTORY IS A MESS

Use the |:CleanViewdir| command to clean up your 'viewdir' directory.


MY PROBLEM ISN'T LISTED HERE

Please open an issue at:
	https://github.com/Faria22/nvim-stay.lua/issues

==============================================================================
8. Credits and License			*nvim-stay-credits-license*

nvim-stay.lua is a Lua implementation inspired by vim-stay, originally created 
by Martin Kopischke (http://martin.kopischke.net) and maintained by Zach 
Himsel (http://zach.himsel.net).

nvim-stay.lua is licensed under the terms of the MIT license.

vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:fdm=marker:
